/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define NUM 1
#define MAC 2
#define SYM 3
#define FUN 4

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <300>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping_term_ms = <333>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        hs: homerow_shifts {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_SHIFTS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
        td: tapdance {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPDANCE";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_3 {
            timeout-ms = <50>;
            key-positions = <32 33>;
            bindings = <&to 3>;
            layers = <0>;
        };
        combo_1 {
            timeout-ms = <50>;
            key-positions = <30 33>;
            bindings = <&to 1>;
        };
        combo_1_high {
            timeout-ms = <50>;
            key-positions = <24 25>;
            bindings = <&to 1>;
        };
        combo_ent {
            timeout-ms = <50>;
	    key-positions = <27 28>;
            bindings = <&kp RET>;
        };
        combo_del {
            timeout-ms = <50>;
	    key-positions = <22 23>;
            bindings = <&kp DEL>;
            layers = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
                //│  Q       │  W       │  E       │  R       │  T       │   │  Y       │  U       │  I       │  O       │  P       │
                  &kp Q      &kp W      &kp E      &kp R      &kp T          &kp Y      &kp U      &kp I      &kp O      &kp P
                //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
                //│  A       │  S       │  D       │  F       │  G       │   │  H       │  J       │  K       │  L       │ BKSP     │
                  &kp A      &kp S       &hm LGUI D  &hm LALT F &kp G          &kp H      &hm RALT J  &hm RGUI K &kp L     &kp BSPC
                //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
                //│  Z       │  X       │  C       │  V       │  B       │   │  N       │  M       │ , <      │ . >      │ ENTER    │
                    &kp Z      &kp X      &kp C      &kp V      &kp B          &kp N      &kp M      &kp COMMA  &kp DOT    &kp ENTER
                //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                     &mt LC(LS(LA(LGUI))) SPC  &hs LSHIFT    &hm RCTL   &to 1
                //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        num_layer {
            bindings = <
                //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
                //│  trans   │  trans   │  trans   │  trans   │  EQUAL   │   │  UNDER   │    7     │    8     │    9     │   BSPC   │
                  &trans     &trans     &trans     &trans     &kp EQUAL      &kp UNDER  &kp N7     &kp N8     &kp N9     &kp BSPC
                //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
                //│  trans   │  trans   │  trans   │  trans   │  UNDER   │   │   DOT    │    4     │    5     │    6     │  ENTER   │
                   &trans     &trans     &trans     &trans     &kp UNDER      &kp DOT    &kp N4     &kp N5     &kp N6     &kp ENTER
                //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
                //│  trans   │  trans   │  trans   │  trans   │   DOT    │   │    0     │    1     │    2     │    3     │   to 2   │
                   &trans     &trans     &trans     &trans     &kp DOT        &kp N0     &kp N1     &kp N2     &kp N3     &to 2
                //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                                      &to 0      &kp LGUI     &hs RSHIFT &to 3
                //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

   

        mac_layer {
            bindings = <
                //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
                //│  Q TAB   │  W       │  F       │  P       │  B       │   │  J       │  L       │  U       │  Y       │  BKSP    │
                  &mt Q TAB    &kp W      &kp F      &kp P      &kp B          &kp J      &kp L      &kp U      &kp Y    &kp BKSP
                //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
                //│  A       │  R       │  S       │  T       │  G       │   │  M       │  N       │  E       │  I       │  O       │
                  &kp A      &hm LCTL R   &hm LALT S  &hm LGUI T    &kp G       &kp M     &hm RGUI N &hm RALT E &hm RCTL I    &kp O
                //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
                //│  Z       │  X       │  C       │  D       │  V       │   │  K       │  H       │ , <      │ . >   :  │ /        │
                 &hs LSHIFT Z  &kp X      &kp C      &kp D      &kp V           &kp K      &kp H    &kp COMMA &td DOT COLON  &kp FSLH
                //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                                 &to 0  &mt LC(LS(LA(LGUI))) SPC  &trans    &to 1
                //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯                   
            >;
        };

        sym_layer {
            bindings = <
                //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
                //│  ESC     │      !   │    @     │     #    │    $     │   │     %    │      ^   │      &   │    *     │  BKSP    │
                  &kp ESC    &kp EXCL   &kp AT     &kp HASH   &kp DLLR       &kp PRCNT  &kp CARET  &kp AMPS   &kp ASTRK  &kp BSPC
                //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
                //│  SHIFT   │  ' "     │  [ ]     │  { }     │  ( )     │   │  / \     │  _ -     │  + =     │  ` ~     │  ENTER   │
                  &kp LSHIFT &td SQT DQT &td LBKT RBKT &td LBRC RBRC &td LPAR RPAR &td FSLH BSLH &td UNDER MINUS &td PLUS EQUAL &td GRAVE TILDE &kp ENTER
                //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
                //│    ,     │   .      │    ?     │    !     │    (     │   │     )    │    :     │    ;     │   "      │   to 3   │
                  &kp COMMA  &kp DOT    &kp QMARK   &kp EXCL  &kp LPAR      &kp RPAR   &kp COLON    &kp SEMI    &kp DQT     &to 3
                //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                                    &to 0      &kp LGUI      &kp RALT    &to 1
                //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        fun_layer {
            bindings = <
                //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
                //│  MUTE    │  PAUSE   │  PREV    │          │          │   │   F1     │   F2     │   F3     │   F4     │  BT_1    │
                  &kp C_MUTE &kp C_PAUSE &kp C_PREV &trans     &trans         &kp F1     &kp F2     &kp F3     &kp F4   &bt BT_SEL 0
                //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
                //│          │  PLAY    │  NEXT    │          │          │   │   F5     │   F6     │   F7     │   F8     │  BT_2    │
                  &kp C_VOL_UP &kp C_PLAY &kp C_NEXT &trans     &trans         &kp F5     &kp F6     &kp F7     &kp F8  &bt BT_SEL 1
                //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
                //│          │          │          │          │          │   │   F9     │  F10     │  F11     │  F12     │  BT_3    │
                    &kp C_VOL_DOWN     &trans     &trans     &trans     &trans         &kp F9     &kp F10    &kp F11    &kp F12   &bt BT_SEL 2
                //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                                    &trans     &kp FN          &bt BT_CLR    &to 1
                //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
    };
};
